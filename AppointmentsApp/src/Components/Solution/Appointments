import {Component} from 'react'
import {v4} from 'uuid'
import {format} from 'date-fns'

import AppointmentItem from '../AppointmentItem'

import './index.css'

class Appointments extends Component {
  state = {
    appointmentsList: [],
    titleInput: '',
    dateInput: '',
    isFilterActive: false,
  }

  toggleIsStarred = id => {
    this.setState(prevState => ({
      appointmentsList: prevState.appointmentsList.map(eachAppointment => {
        if (id === eachAppointment.id) {
          return {...eachAppointment, isStarred: !eachAppointment.isStarred}
        }
        return eachAppointment
      }),
    }))
  }

  onFilter = () => {
    const {isFilterActive} = this.state

    this.setState({
      isFilterActive: !isFilterActive,
    })
  }

  onChangeDateInput = event => {
    this.setState({dateInput: event.target.value})
  }

  onChangeTitleInput = event => {
    this.setState({titleInput: event.target.value})
  }

  onAddAppointment = event => {
    event.preventDefault()
    const {titleInput, dateInput} = this.state
    const formattedDate = dateInput
      ? format(new Date(dateInput), 'dd MMMM yyyy, EEEE')
      : ''
    const newAppointment = {
      id: v4(),
      title: titleInput,
      date: formattedDate,
      isStarred: false,
    }

    this.setState(prevState => ({
      appointmentsList: [...prevState.appointmentsList, newAppointment],
      titleInput: '',
      dateInput: '',
    }))
  }

  getFilteredAppointmentsList = () => {
    const {appointmentsList, isFilterActive} = this.state

    if (isFilterActive) {
      return appointmentsList.filter(
        eachTransaction => eachTransaction.isStarred === true,
      )
    }
    return appointmentsList
  }

  render() {
    const {titleInput, dateInput, isFilterActive} = this.state
    const filterClassName = isFilterActive ? 'filter-filled' : 'filter-empty'
    const filteredAppointmentsList = this.getFilteredAppointmentsList()

    return (
      <div className="app-container">
        <div className="responsive-container">
          <div className="appointments-container">
            <div className="add-appointment-container">
              <form className="form" onSubmit={this.onAddAppointment}>
                <h1 className="add-appointment-heading">Add Appointment</h1>
                <label htmlFor="title" className="label">
                  TITLE
                </label>
                <input
                  type="text"
                  id="title"
                  value={titleInput}
                  onChange={this.onChangeTitleInput}
                  className="input"
                  placeholder="Title"
                />
                <label htmlFor="date" className="label">
                  DATE
                </label>
                <input
                  type="date"
                  id="date"
                  value={dateInput}
                  onChange={this.onChangeDateInput}
                  className="input"
                />
                <button type="submit" className="add-button">
                  Add
                </button>
              </form>
              <img
                src="https://assets.ccbp.in/frontend/react-js/appointments-app/appointments-img.png"
                alt="appointments"
                className="appointments-img"
              />
            </div>
            <hr className="hr" />
            <div className="header-with-filter-container">
              <h1 className="appointments-heading">Appointments</h1>
              <button
                type="button"
                className={`filter-style ${filterClassName}`}
                onClick={this.onFilter}
              >
                Starred
              </button>
            </div>
            <ul className="appointments-list">
              {filteredAppointmentsList.map(eachAppointment => (
                <AppointmentItem
                  key={eachAppointment.id}
                  appointmentDetails={eachAppointment}
                  toggleIsStarred={this.toggleIsStarred}
                />
              ))}
            </ul>
          </div>
        </div>
      </div>
    )
  }
}

export default Appointments


//===================================================================================================


.app-container {
  display: flex;
  justify-content: center;
  align-items: center;
  background-image: linear-gradient(to top, #9796f0, #fbc7d4);
  min-height: 100vh;
}

.responsive-container {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #ffffff;
  width: 85%;
  border-radius: 12px;
  max-width: 550px;
}

@media screen and (min-width: 768px) {
  .responsive-container {
    width: 78%;
    max-width: 1120px;
  }
}

.appointments-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 86%;
  max-width: 972px;
}

.add-appointment-container {
  display: flex;
  justify-content: space-between;
  width: 100%;
  margin-top: 64px;
}

.add-appointment-heading {
  color: #171f46;
  font-family: 'Roboto';
  font-size: 22px;
  font-weight: 500;
  margin-top: 0;
  margin-bottom: 24px;
}

@media screen and (min-width: 768px) {
  .add-appointment-heading {
    font-size: 32px;
    margin-bottom: 48px;
  }
}

.form {
  display: flex;
  flex-direction: column;
  width: 100%;
}

@media screen and (min-width: 768px) {
  .form {
    width: 45%;
    max-width: 320px;
  }
}

.label {
  color: #7e858e;
  font-family: 'Roboto';
  font-size: 12px;
  font-weight: 500;
  margin-bottom: 8px;
}

.input {
  color: #131415;
  font-family: 'Roboto';
  font-size: 12px;
  border: 1px solid #7e858e;
  border-radius: 4px;
  height: 40px;
  padding-left: 16px;
  padding-top: 8px;
  padding-bottom: 8px;
  margin-bottom: 24px;
  outline: none;
}

@media screen and (min-width: 768px) {
  .input {
    font-size: 14px;
  }
}

.add-button {
  align-self: flex-start;
  background-color: #8b5cf6;
  color: #ffffff;
  font-family: 'Roboto';
  font-size: 12px;
  font-weight: 500;
  border: none;
  border-radius: 8px;
  padding-left: 16px;
  padding-right: 16px;
  padding-top: 8px;
  padding-bottom: 8px;
  outline: none;
}

.appointments-img {
  display: none;
}

@media screen and (min-width: 768px) {
  .appointments-img {
    display: block;
    width: 49%;
  }
}

.hr {
  border: 1px solid #b5b7c4;
  width: 100%;
  margin-top: 25px;
  margin-bottom: 32px;
}

.header-with-filter-container {
  display: flex;
  justify-content: space-between;
  align-items: center;
  align-self: stretch;
}

@media screen and (min-width: 768px) {
  .header-with-filter-container {
    padding-left: 12px;
    padding-right: 12px;
  }
}

.appointments-heading {
  color: #171f46;
  font-family: 'Roboto';
  font-size: 20px;
  font-weight: 500;
  margin: 0;
}

@media screen and (min-width: 768px) {
  .appointments-heading {
    font-size: 24px;
  }
}

.filter-style {
  font-family: 'Roboto';
  font-size: 12px;
  font-weight: 600;
  border-radius: 25px;
  padding-left: 16px;
  padding-top: 4px;
  padding-bottom: 4px;
  padding-right: 16px;
  border: none;
  outline: none;
}

.filter-filled {
  color: #ffffff;
  background-color: #9897f0;
}

.filter-empty {
  color: #9897f0;
  background-color: white;
  border: 1px solid #9897f0;
}

.appointments-list {
  display: flex;
  flex-direction: column;
  width: 100%;
  padding: 0px;
  margin-top: 24px;
}

@media screen and (min-width: 768px) {
  .appointments-list {
    flex-direction: row;
    flex-wrap: wrap;
  }
}
